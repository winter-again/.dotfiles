set -g update-environment "SWAYSOCK" # for Sway
# yazi
set -ga update-environment "TERM"
set -ga update-environment "TERM_PROGRAM"
set -sa terminal-overrides ",xterm*:Tc" # fix colors
# undercurl supp, undercurl colors
set -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -sg escape-time 5
set -g allow-passthrough on
set -g renumber-windows on

# styling
set -g status-style "fg=#c0caf5 bg=#16161e"
set -g status-left "#[fg=#7aa2f7 bg=#292e42][#{session_name}] #[fg=#292e42 bg=#1a1b26] "
# set -g status-left-style "bg=#16161e fg=#7aa2f7 bold"
set -g status-left-length 100 # allow longer session names
# default window-status-format = "#{window_index}:#{window_name}#{window_flags}"
set -g window-status-format "#{window_index}: #{window_name}#{window_flags}"
# set -g window-status-current-style "bg=#292e42 fg=#7aa2f7"
set -g window-status-current-format "#[fg=#292e42, bg=#1a1b26]#[fg=#7aa2f7 bg=#292e42]#{window_index}: #{window_name}#{window_flags}#[fg=#292e42 bg=#1a1b26]"
# set -g status-right "\"#{host}\" [%Y-%m-%d - %a %I:%M %p]"
set -g status-right "#{?pane_in_mode, #[fg=#292e42 bg=#1a1b26]#[fg=#7aa2f7 bg=#292e42]COPY#[fg=#292e42 bg=#1a1b26], } #{?client_prefix, #[fg=#292e42 bg=#1a1b26]#[fg=#7aa2f7 bg=#292e42]CTRL-Y#[fg=#292e42 bg=#1a1b26], } #[fg=#c0caf5 bg=#16161e][#{host}]"
set -g pane-border-style "fg=#696d87"
set -g pane-active-border-style "fg=#9d7cd8"
set -g window-status-separator " "
set -g mode-style "bg=#283457" # yank hl
# comamnd prompt and command prompt in vim command mode
set -g message-style "bg=#1a1b26 fg=#c0caf5"
set -g message-command-style "bg=#9d7cd8 fg=#1a1b26"

# settings
unbind C-b
set -g prefix C-y
bind-key C-a send-prefix
bind r source-file ~/.config/tmux/tmux.conf # source config file
set -g mouse on
set -g base-index 1 # 1-indexed windows
set -g pane-base-index 1
set -g detach-on-destroy off # return to last session instead of exiting tmux on destroying session
# set-window-option -g mode-keys vi
set -g mode-keys vi # copy mode
set -g status-keys vi # command prompt
# copying behavior
# entering copy-mode
bind -T prefix v copy-mode
# always keep sel highlighted after copy
# using mouse
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-no-clear "wl-copy"
# using keys
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-no-clear "wl-copy"
# bind -T copy-mode-vi y send-keys -X copy-selection-no-clear "xclip -in -selection clipboard"

# removed -r (make repeatable) flag to get rid of repeat just for these bindings
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
# remap pane splitting
unbind %
unbind '"'
# open panes and windows in cwd
bind c new-window -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# pane resizing
unbind Up
unbind Down
unbind Left
unbind Right
bind -r Up resize-pane -U
bind -r Down resize-pane -D
bind -r Left resize-pane -L
bind -r Right resize-pane -R

# remap kill pane
unbind x
bind q kill-pane
bind x display-panes -d 3000
# tmux-sessionizer
# bind -r t run-shell "~/.local/bin/tmux-sessionizer.sh"
bind f run-shell "~/.local/bin/tmux-switcher.sh"
# open testing splits with pre-specified size
# -h is like sv
# -v is like sh (default)
# -d means we keep focus on current pane
# -l takes percentages too
# bind T split-window -d -f -l 15 -c "#{pane_current_path}"
# bind t split-window -d -h -f -l 30% -b -c "#{pane_current_path}"
bind T split-window -f -l 30% -c "#{pane_current_path}"
bind t split-window -h -f -l 30% -b -c "#{pane_current_path}"
bind b select-pane -l # go back to last-pane
