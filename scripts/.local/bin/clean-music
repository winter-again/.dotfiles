#!/usr/bin/env python

import argparse
import os
import shutil
from collections.abc import Sequence
from pathlib import Path

MUSIC_DIR = Path(os.environ["HOME"]) / "Music"
MUSIC_LIB_LOCAL = MUSIC_DIR / "library"
EXT_DRIVE = Path("/run/media/winteragain/ext-drive")  # not ideal
MUSIC_LIB_EXT = EXT_DRIVE / "music/library"


def main(argv: Sequence[str] | None = None) -> int:
    """
    Common operations when transferring ripped music files
    """
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(
        dest="cmd",  # TODO: don't need this?
        help="Common operations when transferring ripped music files",
        required=True,
    )

    parser_clean = subparsers.add_parser(
        "clean", help="Clean garbage files generated by MacOS"
    )
    parser_clean.set_defaults(func=clean)

    parser_move_aif = subparsers.add_parser(
        "move-aif", help="Move .aif files from local library to external drive library"
    )
    parser_move_aif.set_defaults(func=move_aif_files)

    args = parser.parse_args(argv)
    args.func(args)  # pyright: ignore[reportAny]

    return 0


def clean(args: argparse.Namespace) -> None:  # pyright: ignore[reportUnusedParameter]
    for f in MUSIC_DIR.rglob("*"):
        if f.name.startswith("._") or f.name == ".DS_Store":
            f.unlink()
            print(f"Deleted {f}")


def move_aif_files(args: argparse.Namespace) -> None:  # pyright: ignore[reportUnusedParameter]
    if os.path.ismount(EXT_DRIVE):
        MUSIC_LIB_EXT.mkdir(exist_ok=True)

        for song in MUSIC_LIB_LOCAL.rglob("*.aif"):
            song_path_rel_to_artist = song.relative_to(MUSIC_LIB_LOCAL)

            album_stem = song_path_rel_to_artist.parent
            album_path_rel_to_ext_lib = MUSIC_LIB_EXT / album_stem
            album_path_rel_to_ext_lib.mkdir(
                parents=True, exist_ok=True
            )  # ensure path <artist>/<album>/ exists

            song_path_rel_to_ext_lib = MUSIC_LIB_EXT / song_path_rel_to_artist
            # must use shutil.move() because diff. file systems
            shutil.move(song, song_path_rel_to_ext_lib)  # pyright: ignore[reportUnusedCallResult]

            print(f"Moved {song} to {song_path_rel_to_ext_lib}")
    else:
        print(f"{EXT_DRIVE} not mounted")


if __name__ == "__main__":
    raise SystemExit(main())
